{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\cred-page\\\\client\\\\src\\\\components\\\\ItemList.js\";\nimport React from 'react';\nimport ItemCard from './ItemCard';\nimport './ItemList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemList({\n  items,\n  deleteItem\n}) {\n  if (!items || items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-message\",\n      children: \"No items added yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-list\",\n    children: items.map((item, index) => /*#__PURE__*/_jsxDEV(ItemCard, {\n      text: item.text || item.name || 'No Text' // Choose based on your schema\n      ,\n      onDelete: () => deleteItem(item._id || index)\n    }, item._id || index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","ItemCard","jsxDEV","_jsxDEV","ItemList","items","deleteItem","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","text","name","onDelete","_id","_c","$RefreshReg$"],"sources":["C:/Users/admin/cred-page/client/src/components/ItemList.js"],"sourcesContent":["import React from 'react';\r\nimport ItemCard from './ItemCard';\r\nimport './ItemList.css';\r\n\r\nfunction ItemList({ items, deleteItem }) {\r\n  if (!items || items.length === 0) {\r\n    return <p className=\"empty-message\">No items added yet.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-list\">\r\n      {items.map((item, index) => (\r\n        <ItemCard\r\n          key={item._id || index}\r\n          text={item.text || item.name || 'No Text'} // Choose based on your schema\r\n          onDelete={() => deleteItem(item._id || index)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAW,CAAC,EAAE;EACvC,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;IAChC,oBAAOJ,OAAA;MAAGK,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7D;EAEA,oBACEV,OAAA;IAAKK,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBJ,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBb,OAAA,CAACF,QAAQ;MAEPgB,IAAI,EAAEF,IAAI,CAACE,IAAI,IAAIF,IAAI,CAACG,IAAI,IAAI,SAAU,CAAC;MAAA;MAC3CC,QAAQ,EAAEA,CAAA,KAAMb,UAAU,CAACS,IAAI,CAACK,GAAG,IAAIJ,KAAK;IAAE,GAFzCD,IAAI,CAACK,GAAG,IAAIJ,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGvB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACQ,EAAA,GAhBQjB,QAAQ;AAkBjB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}